// // ƒê·ª£i cho trang web v√† c√°c th∆∞ vi·ªán nh∆∞ jQuery, DataTable ƒë∆∞·ª£c t·∫£i ho√†n to√†n
// $(document).ready(function() {
//     // Ch·ªâ th·ª±c thi code n·∫øu tr√™n trang c√≥ b·∫£ng d·ªØ li·ªáu v·ªõi id="datatable"
//     if ($('#datatable').length === 0) {
//         return; // D·ª´ng l·∫°i n·∫øu ƒë√¢y kh√¥ng ph·∫£i trang camera
//     }

//     // L·∫•y ƒë·ªëi t∆∞·ª£ng DataTable ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o tr√™n trang
//     var datatable = $('#datatable').DataTable();

//     // --- C·∫§U H√åNH K·∫æT N·ªêI MQTT ---
//     // !!! ƒê·∫£m b·∫£o c√°c th√¥ng tin n√†y ch√≠nh x√°c !!!
//     const brokerUrl = 'wss://mqtt.ellm.io:8084/mqtt'; 
//     const topicToSubscribe = 'mqtt/face/1018656/+'; 
//     const options = {
//         connectTimeout: 4000,
//         clientId: 'browser_client_' + Math.random().toString(16).substr(2, 8),
//         username: 'eclo',
//         password: 'Eclo@123'
//     };

//     console.log('ws.js: ƒêang k·∫øt n·ªëi t·ªõi MQTT broker t·∫°i:', brokerUrl);
//     const client = mqtt.connect(brokerUrl, options);

//     // --- X·ª¨ L√ù C√ÅC S·ª∞ KI·ªÜN K·∫æT N·ªêI ---

//     // Khi k·∫øt n·ªëi th√†nh c√¥ng
//     client.on('connect', function () {
//         console.log('‚úÖ ws.js: ƒê√£ k·∫øt n·ªëi MQTT Broker qua WebSocket!');
//         client.subscribe(topicToSubscribe, function (err) {
//             if (!err) {
//                 console.log(`‚úÖ ws.js: ƒê√£ ƒëƒÉng k√Ω v√†o topic: ${topicToSubscribe}`);
//             } else {
//                 console.error('‚ùå ws.js: L·ªói khi ƒëƒÉng k√Ω topic:', err);
//             }
//         });
//     });

//     // Khi c√≥ l·ªói k·∫øt n·ªëi
//     client.on('error', function (err) {
//         console.error('‚ùå ws.js: L·ªói k·∫øt n·ªëi MQTT: ', err);
//         client.end();
//     });

//     // --- X·ª¨ L√ù KHI NH·∫¨N ƒê∆Ø·ª¢C TIN NH·∫ÆN (QUAN TR·ªåNG NH·∫§T) ---
//     client.on('message', function (topic, message) {
//         const messageString = message.toString();
//         console.log(`üì® ws.js: Nh·∫≠n ƒë∆∞·ª£c tin nh·∫Øn t·ª´ topic [${topic}]`);
        
//         try {
//             const payload = JSON.parse(messageString);
//             if (!payload.info) return;
//             const info = payload.info;
            
//             // --- LOGIC PH√ÇN LO·∫†I V√Ä C·∫¨P NH·∫¨T B·∫¢NG ---

//             // 1. N·∫øu l√† topic 'Rec' V√Ä ƒëang ·ªü trang 'rec'
//             if (topic.endsWith('/Rec') && window.location.pathname.includes('/camera/rec')) {
//                 const personTypes = { "0": "Ng∆∞·ªùi l·∫°", "1": "Nh√¢n vi√™n", "2": "Kh√°ch", "3": "Danh s√°ch ƒëen" };
                
//                 datatable.row.add({
//                     "id": info.RecordID,
//                     "image_path": info.pic ? `<img src="${info.pic}" class="img-thumbnail" style="width:60px;">` : 'N/A',
//                     "person_name": info.persionName,
//                     "person_id": info.personId,
//                     "similarity": parseFloat(info.similarity1).toFixed(2) + '%',
//                     "event_time": new Date(info.time).toLocaleString('vi-VN'),
//                     "person_type": personTypes[info.PersonType] || "Kh√¥ng x√°c ƒë·ªãnh",
//                     "is_no_mask": info.isNoMask == "1" ? '<span class="badge bg-danger">Kh√¥ng kh·∫©u trang</span>' : '<span class="badge bg-success">C√≥ kh·∫©u trang</span>'
//                 }).draw(false); // draw(false) ƒë·ªÉ v·∫Ω l·∫°i b·∫£ng m√† kh√¥ng reset trang
//             }

//             // 2. N·∫øu l√† topic 'Snap' V√Ä ƒëang ·ªü trang 'snap'
//             else if (topic.endsWith('/Snap') && window.location.pathname.includes('/camera/snap')) {
//                 datatable.row.add({
//                     "id": info.SnapID,
//                     "image_path": info.pic ? `<img src="${info.pic}" class="img-thumbnail" style="width:60px;">` : 'N/A',
//                     "record_id": info.SnapID,
//                     "event_time": new Date(info.time).toLocaleString('vi-VN'),
//                     "is_no_mask": info.isNoMask == "1" ? '<span class="badge bg-danger">Kh√¥ng kh·∫©u trang</span>' : '<span class="badge bg-success">C√≥ kh·∫©u trang</span>'
//                 }).draw(false);
//             }

//         } catch (e) {
//             console.error("‚ùå ws.js: L·ªói khi x·ª≠ l√Ω tin nh·∫Øn JSON:", e);
//         }
//     });
// });